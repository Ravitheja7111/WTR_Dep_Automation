---
  - name: create directory if not exist 
    file:
      path: "{{ patchdir }}"
      state: directory
      mode: 0777
    register: createdir

  - name: download package
    shell: wget -O {{ artifactID }}-{{ version }}.{{ classifier }} http://wtr-watm-artefactrepo.johnlewis.co.uk:8081/nexus/service/local/artifact/maven/redirect?r={{ repositoryID }}\&g={{ groupID }}\&a={{ artifactID }}\&v={{ version }}\&p={{ classifier }}
    args:
      chdir: /tmp
    when: createdir is success
    register: patchpkg

  - name: unzip the file
    unarchive:
      src: /tmp/{{ artifactID }}-{{ version }}.{{ classifier }}
      dest: "{{ patchdir }}"
      remote_src: yes
      mode: 0777
    when: patchpkg is success
 
  - name: create backup directory
    shell: "{{ item }}"
    with_items:
         - rm -rf /u02/app/oretail/RMS_BATCH_BACKUP/DBPatch_bkp_`date '+%Y-%m-%d'`/*.tar
         - mkdir -p /u02/app/oretail/RMS_BATCH_BACKUP/DBPatch_bkp_`date '+%Y-%m-%d'`

  #- name: Take backup before DB vendor patch apply
    #shell: tar -pcf /u02/app/oretail/RMS_BATCH_BACKUP/DBPatch_bkp_`date '+%Y-%m-%d'`/rmsbatch_{{ month }}.tar RMS_BATCH --exclude='/u02/app/oretail/RMS_BATCH/JLCUSTOM'
    #args:
      #chdir: /u02/app/oretail
  - name: apply patch
    shell: "{{ item }}"
    with_items:
         - pwd
         - whoami
         - orpatch apply -s "{{ patchdir }}"
    args: 
      chdir: "{{ retail_home }}"
      #creates: "{{ retail_home }}"
    register: orpatch
  - debug: var=orpatch
  
  - name: List the installed patches and its status
    shell: "{{ item }}"
    with_items:
         - orpatch lsinventory
    args:
      chdir: "{{ retail_home }}"
      #creates: "{{ retail_home }}"
    register: orpatch_status
  - debug: var=orpatch_status
