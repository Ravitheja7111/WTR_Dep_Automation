---
  - name: create directory if not exist 
    file:
      path: "{{ patchdir }}"
      state: directory
      mode: 0777
    register: createdir
    tags: "{{ application }}"

  - name: download package
    shell: wget -O {{ artifactID }}-{{ version }}.{{ classifier }} http://wtr-watm-artefactrepo.johnlewis.co.uk:8081/nexus/service/local/artifact/maven/redirect?r={{ repositoryID }}\&g={{ groupID }}\&a={{ artifactID }}\&v={{ version }}\&p={{ classifier }}
    args:
      chdir: /tmp
    when: createdir is success
    register: patchpkg
    tags: "{{ application }}"

  - name: unzip the file
    unarchive:
      src: /tmp/{{ artifactID }}-{{ version }}.{{ classifier }}
      dest: "{{ patchdir }}"
      remote_src: yes
      mode: 0777
    when: patchpkg is success
    tags: "{{ application }}"

  - name: check if manifest.csv file exists
    stat: 
      path: "{{ patchdir }}/manifest.csv"
    register: result
    tags: "{{ application }}"
  
  - name: Apply "{{ application }}" patch from 1st level directory
    shell: source /home/{{ appuser }}/batch.profile && {{ retail_home }}/orpatch apply -s {{ patchdir }}
    args: 
      chdir: "{{ retail_home }}"
    register: orpatch_1st
    when: result.stat.exists == true
    tags: "{{ application }}"
  - debug: 
      var: orpatch_1st.stdout_lines
    tags: "{{ application }}"
   
  - name: Apply "{{ application }}" patch from 2nd level directory
    shell: source /home/{{ appuser }}/batch.profile && {{ retail_home }}/orpatch apply -s {{ patchdir }}/{{ patch_num }}
    args: 
      chdir: "{{ retail_home }}"
    register: orpatch_2nd
    when: result.stat.exists == false
    tags: "{{ application }}"
  - debug: 
      var: orpatch_2nd.stdout_lines
    tags: "{{ application }}"
  
  - name: List the installed patches in "{{ application }}" and its status
    shell: source /home/{{ appuser }}/batch.profile && {{ retail_home }}/orpatch lsinventory
    args:
      chdir: "{{ retail_home }}"
    register: orpatch_status
    tags: "{{ application }}"
  - debug: 
      var: orpatch_status.stdout_lines
    tags: "{{ application }}"
